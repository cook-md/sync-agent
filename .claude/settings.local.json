{
  "permissions": {
    "allow": [
      "Bash(cargo build:*)",
      "Bash(cargo:*)",
      "Bash(grep:*)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/controllers/api/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/lib/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/config/initializers/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/config/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/controllers/auth/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/mailers/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/views/session_mailer/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/models/**)",
      "Read(/Users/alexeydubovskoy/Cooklang/cook.md/web/app/models/**)",
      "Bash(RUST_BACKTRACE=1 cargo test secure_session::tests::test_secure_session_save_and_load)",
      "Bash(chmod:*)",
      "Bash(/Users/alexeydubovskoy/Cooklang/cook.md/sync-agent/scripts/dev.sh:*)",
      "Bash(bundle exec rspec:*)",
      "Bash(rails routes)",
      "Bash(rails runner:*)",
      "Bash(rails generate:*)",
      "Bash(rails:*)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/web/**)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/sync-server/**)",
      "Bash(bundle exec rails:*)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/desktop/src-tauri/src/features/**)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/desktop/src-tauri/src/**)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/desktop/src-tauri/**)",
      "Bash(RUST_LOG=debug cargo run -- status)",
      "Bash(security find-generic-password:*)",
      "Bash(RUST_LOG=debug cargo run -- start)",
      "Bash(export RUST_LOG=debug)",
      "Bash(./target/release/cook-sync:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Read(//Users/alexeydubovskoy/Library/**)",
      "Bash(./target/debug/cook-sync:*)",
      "Bash(COOK_API_ENDPOINT=https://custom.example.com/api ./target/debug/cook-sync config --show)",
      "Read(//Users/alexeydubovskoy/Cooklang/**)",
      "Bash(defaults read:*)",
      "Bash(rustc:*)",
      "Bash(timeout 5 cargo run -- start)",
      "Bash(export RUST_LOG=info)",
      "Bash(./scripts/generate-keys-openssl.sh:*)",
      "Bash(SENTRY_DSN=\"https://test@sentry.io/123456\" cargo build)",
      "Bash(export SENTRY_DSN=\"https://test@sentry.io/123456\")",
      "Bash(RUST_LOG=debug ./target/debug/cook-sync --version)",
      "Bash(RUST_LOG=info ./target/debug/cook-sync --version)",
      "Bash(export SENTRY_DSN=\"https://runtime@sentry.io/999999\")",
      "Bash(export COOK_MD_PUBLIC_KEY_ED25519=\"TEST_KEY_BASE64_VALUE\")",
      "Bash(identify:*)",
      "Bash(ls:*)",
      "Read(//Applications/Cook Sync.app/Contents/MacOS/**)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" --help)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" start)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" login)",
      "Bash(PROFILE=release cargo build --release)",
      "Bash(export PROFILE=release)",
      "Bash(env)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" --version)",
      "Bash(RUST_LOG=debug ./target/release/cook-sync:*)",
      "Bash(timeout:*)",
      "Read(//Users/alexeydubovskoy/.local/share/**)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" config --show)",
      "Bash(RUST_LOG=info ./target/debug/cook-sync status:*)",
      "Bash(RUST_LOG=debug cargo run -- --version)",
      "Bash(RUST_LOG=info cargo run -- status)",
      "Bash(RUST_LOG=info cargo run -- start)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" status)",
      "Bash(COOK_ENDPOINT=https://example.com ./target/debug/cook-sync config --show)",
      "Bash(env COOK_ENDPOINT=https://example.com ./target/debug/cook-sync config --show)",
      "Bash(env COOK_ENDPOINT=http://localhost:3000 ./target/debug/cook-sync config --show)",
      "Bash(env COOK_API_ENDPOINT=https://api.test.com COOK_SYNC_ENDPOINT=https://sync.test.com ./target/debug/cook-sync config --show)",
      "Bash(\"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" stop)",
      "Bash(RUST_LOG=info \"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" start)",
      "Bash(env RUST_LOG=info \"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" start)",
      "Read(//Applications/**)",
      "Bash(env RUST_LOG=debug \"/Applications/Cook Sync.app/Contents/MacOS/cook-sync\" start)",
      "Bash(RUST_LOG=trace tail -30 /Users/alexeydubovskoy/Library/Caches/cook-sync/cook-sync.log)",
      "Bash(./scripts/create-icons.sh:*)",
      "Bash(env RUST_LOG=debug ./target/release/cook-sync start)",
      "Read(//Users/alexeydubovskoy/.config/**)",
      "Bash(RUST_LOG=info cargo run -- --version)",
      "Bash(RUST_LOG=info cargo test test_manual_update_check -- --nocapture)",
      "Bash(RUST_LOG=info cargo run --bin test-update)",
      "Bash(python3:*)",
      "Bash(RUST_LOG=info COOK_ALLOW_UNSIGNED_UPDATES=true cargo run --bin test-update)",
      "Bash(RUST_LOG=info COOK_SYNC_ALLOW_UNSIGNED_UPDATES=true cargo run --bin test-update)",
      "Read(//Users/alexeydubovskoy/Cooklang/cook.md/**)",
      "Bash(gh release list:*)",
      "Bash(gh release edit:*)",
      "Bash(gh run list:*)",
      "Bash(gh workflow view:*)",
      "Bash(gh api:*)",
      "Bash(gh release view:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "WebSearch",
      "WebFetch(domain:opensource.axo.dev)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.rs)",
      "Read(//private/tmp/**)",
      "Bash(tar:*)",
      "Bash(./scripts/generate-sparkle-keys.sh:*)",
      "Bash(/tmp/sparkle.app/Contents/MacOS/sparkle:*)",
      "Bash(./scripts/generate-sparkle-keys-openssl.sh:*)",
      "Bash(dist:*)",
      "Bash(apt-cache:*)",
      "WebFetch(domain:www.mistys-internet.website)",
      "Bash(ruby:*)",
      "Bash(yq eval:*)",
      "Bash(yamllint:*)",
      "Bash(git add:*)",
      "Bash(git restore:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)"
    ],
    "deny": [],
    "ask": []
  }
}
